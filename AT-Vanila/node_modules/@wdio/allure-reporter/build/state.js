import { sep } from 'node:path';
import { AllureGroup, AllureTest, AllureStep, ExecutableItemWrapper } from 'allure-js-commons';
import { findLast } from './utils.js';
export class AllureReporterState {
    currentFile;
    runningUnits = [];
    stats = { test: 0, hooks: 0, suites: 0 };
    get currentSuite() {
        return findLast(this.runningUnits, (unit) => unit instanceof AllureGroup);
    }
    get currentTest() {
        return findLast(this.runningUnits, (unit) => unit instanceof AllureTest);
    }
    get currentStep() {
        return findLast(this.runningUnits, (unit) => unit instanceof AllureStep);
    }
    get currentHook() {
        return findLast(this.runningUnits, (unit) => unit instanceof ExecutableItemWrapper);
    }
    get currentAllureStepableEntity() {
        return findLast(this.runningUnits, (unit) => unit instanceof AllureTest || unit instanceof AllureStep || unit instanceof ExecutableItemWrapper);
    }
    get currentPackageLabel() {
        if (!this.currentFile) {
            return undefined;
        }
        return this.currentFile.replaceAll(sep, '.');
    }
    push(unit) {
        if (unit instanceof AllureGroup) {
            this.stats.suites++;
        }
        else if (unit instanceof AllureTest) {
            this.stats.test++;
        }
        else {
            this.stats.hooks++;
        }
        this.runningUnits.push(unit);
    }
    pop() {
        return this.runningUnits.pop();
    }
}
