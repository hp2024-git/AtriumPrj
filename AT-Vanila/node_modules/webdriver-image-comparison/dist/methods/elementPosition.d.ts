import type { Executor } from './methods.interfaces.js';
import type { ElementPosition } from '../clientSideScripts/elementPosition.interfaces.js';
/**
 * Get the element position on a Android device
 */
export declare function getElementPositionAndroid(executor: Executor, element: HTMLElement, { isAndroidNativeWebScreenshot, isLandscape }: {
    isAndroidNativeWebScreenshot: boolean;
    isLandscape: boolean;
}): Promise<ElementPosition>;
/**
 * Get the element position on a desktop browser
 *
 * @param {function} executor         The function to execute JS in the browser
 * @param {number}   innerHeight      The inner height of the screen
 * @param {number}   screenshotHeight The screenshot height
 * @param {element}  element          The element
 *
 * @returns {Promise<{
 *    height: number,
 *    width: number,
 *    x: number,
 *    y: number
 * }>}
 */
export declare function getElementPositionDesktop(executor: Executor, element: HTMLElement, { innerHeight, screenshotHeight }: {
    innerHeight: number;
    screenshotHeight: number;
}): Promise<ElementPosition>;
/**
 * Get the element position on iOS Safari
 */
export declare function getElementPositionIos(executor: Executor, element: HTMLElement, { isLandscape }: {
    isLandscape: boolean;
}): Promise<ElementPosition>;
//# sourceMappingURL=elementPosition.d.ts.map