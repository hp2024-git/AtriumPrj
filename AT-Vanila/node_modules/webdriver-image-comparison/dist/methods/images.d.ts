import type { CroppedBase64Image, IgnoreBoxes, ImageCompareOptions, ImageCompareResult, ResizeDimensions } from './images.interfaces.js';
import type { FullPageScreenshotsData } from './screenshots.interfaces.js';
import type { Executor, GetElementRect, TakeScreenShot } from './methods.interfaces.js';
import type { WicElement } from '../commands/element.interfaces.js';
/**
 * Check if the image exists and create a new baseline image if needed
 */
export declare function checkBaselineImageExists(actualFilePath: string, baselineFilePath: string, autoSaveBaseline: boolean): Promise<void>;
/**
 * Make a cropped image with Canvas
 */
export declare function makeCroppedBase64Image({ addIOSBezelCorners, base64Image, deviceName, devicePixelRatio, isWebDriverElementScreenshot, isIOS, isLandscape, rectangles, resizeDimensions, }: CroppedBase64Image): Promise<string>;
/**
 * Execute the image compare
 */
export declare function executeImageCompare(executor: Executor, options: ImageCompareOptions, isViewPortScreenshot?: boolean, isNativeContext?: boolean): Promise<ImageCompareResult | number>;
/**
 * Make a full page image with Canvas
 */
export declare function makeFullPageBase64Image(screenshotsData: FullPageScreenshotsData, { devicePixelRatio, isLandscape }: {
    devicePixelRatio: number;
    isLandscape: boolean;
}): Promise<string>;
/**
 * Save the base64 image to a file
 */
export declare function saveBase64Image(base64Image: string, filePath: string): Promise<void>;
/**
 * Create a canvas with the ignore boxes if they are present
 */
export declare function addBlockOuts(screenshot: string, ignoredBoxes: IgnoreBoxes[]): Promise<string>;
/**
 * Take a base64 screenshot of an element
 */
export declare function takeBase64ElementScreenshot({ element, devicePixelRatio, isIOS, methods: { getElementRect, screenShot, }, resizeDimensions, }: {
    element: WicElement;
    devicePixelRatio: number;
    isIOS: boolean;
    methods: {
        getElementRect: GetElementRect;
        screenShot: TakeScreenShot;
    };
    resizeDimensions: ResizeDimensions;
}): Promise<string>;
//# sourceMappingURL=images.d.ts.map